/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DAO;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Student;

/**
 *
 * @author lequo
 */
public class HomeFrm extends javax.swing.JFrame {
    
    private ArrayList<Student> ls_student;
    private DefaultTableModel tblModel;
    private int selectedIndex;
    
    final JFileChooser fc = new JFileChooser();
    /**
     * Creates new form HomeFrm
     */
    public HomeFrm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Quan li hoc sinh");
        tblStudent.setDefaultEditor(Object.class, null);
        tblStudent.setDefaultEditor(Number.class, null);
        tblStudent.setAutoCreateRowSorter(true);
        // fetch all students from sqlserver
        this.ls_student = new DAO().getAllStudents();
        //update table
        this.tblModel = (DefaultTableModel) tblStudent.getModel();
        this.updateTable();
        
    }
    
    public void updateTable() {
        for(int i=0; i<ls_student.size(); i++) {
            Student student = ls_student.get(i);
            tblModel.addRow(new Object[] {i + 1, student.getMHS(), student.getTenHS(),
               student.getDiem(), student.getHinhAnh(), student.getDiaChi(), student.getGhiChu()});
        }
    }
    
    public void addStudent(Student s) {
        if(new DAO().addStudent(s)) {
            ls_student.add(s);
            tblModel.setRowCount(0);
            
            //update table
            updateTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        btnAddStudent = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DANH SÁCH HỌC SINH");

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã học sinh", "Tên học sinh", "Điểm", "Hình ảnh", "Địa chỉ", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        btnAddStudent.setText("Thêm học sinh");
        btnAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStudentActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa thông tin");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jButton1.setText("Xóa học sinh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setText("Import CSV");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Export CSV");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddStudent, btnEdit, btnExit, jButton1});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton6, jButton7});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton6)
                        .addGap(26, 26, 26)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnAddStudent)
                    .addComponent(btnExit)
                    .addComponent(jButton1))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStudentActionPerformed
        // TODO add your handling code here:
        InputFrm inputFrm = new InputFrm(this, rootPaneCheckingEnabled);
        inputFrm.setVisible(true);
    }//GEN-LAST:event_btnAddStudentActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        
        selectedIndex = tblStudent.getSelectedRow();
        if(ls_student.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Không có học sinh nào để sửa!");
        } else if(selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn học sinh trên bảng "
                    + "rồi chọn sửa!");
        } else {
            EditFrm editFrm = new EditFrm(this, rootPaneCheckingEnabled);
            editFrm.setEditData(ls_student.get(selectedIndex));
            editFrm.setVisible(true);
        }
        
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        selectedIndex = tblStudent.getSelectedRow();
        if(ls_student.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Không có học sinh nào để xóa!");
        } else if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn học sinh trên bảng"
                    + " rồi chọn xóa!");
        } else {
            int output = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn xóa"
                    + " học sinh này ?", "Cảnh báo", 
                    JOptionPane.YES_OPTION, JOptionPane.NO_OPTION);
            if (output == JOptionPane.YES_OPTION) {
                if(DeleteStudent(ls_student.get(selectedIndex))) {
                    JOptionPane.showMessageDialog(rootPane, "Xóa thành công!");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Xóa thất bại!");
                }
            } else if (output == JOptionPane.NO_OPTION) {
                return;
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        fc.setDialogTitle("Specify a file to save");   
        int userSelect = fc.showSaveDialog(HomeFrm.this);
        if(userSelect == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                OutputStreamWriter writer = new OutputStreamWriter(new 
                    FileOutputStream(file.getAbsolutePath()), "UTF-8");
                for (Student s : ls_student) {
                    writer.write(s.getMHS() + ',' + s.getTenHS() + ',' + s.getDiem() + 
                            ',' + s.getHinhAnh() + ',' + s.getDiaChi() + ',' + s.getGhiChu());
                    writer.write("\n");
                }
                writer.close();
                JOptionPane.showMessageDialog(rootPane, "Xuất file csv thành"
                        + " công tại đường dẫn: " + file.getAbsolutePath());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        fc.setDialogTitle("Specify a file to import");   
        int returnVal = fc.showOpenDialog(HomeFrm.this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                // import csv
                BufferedReader bw = new BufferedReader(new FileReader(file.getPath()));
                ArrayList<Student> students = new ArrayList<>();
                String i;
                while ((i = bw.readLine()) != null)  {
                   String[] data = i.split(",");
                   Student s = new Student(data[0], data[1], 
                           Double.parseDouble(data[2]), data[3], data[4], data[5]);
                   students.add(s);
                   
                }
                if(new DAO().InsertManyStudent(students)) {
                    JOptionPane.showMessageDialog(rootPane, "Nhập dữ liệu từ file csv thành công!");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Nhập dữ liệu từ "
                            + "file csv thất bại! (ID không được trùng, định dạng phải phù hợp)");
                }
                bw.close();
                ls_student = new DAO().getAllStudents();
                tblModel.setRowCount(0);
                updateTable();
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(HomeFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(HomeFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Open command cancelled by user");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddStudent;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudent;
    // End of variables declaration//GEN-END:variables

    public boolean updateStudent(Student s) {
        if(new DAO().updateStudent(s)) {
            ls_student.clear();
            ls_student = new DAO().getAllStudents();
            // update table
            tblModel.setRowCount(0);
            updateTable();
            return true;
        } else {
            return false;
        }
    }

    public boolean DeleteStudent(Student s) {
        if(new DAO().deleteStudent(s)) {
            ls_student.remove(s);
            tblModel.setRowCount(0);
            updateTable();
            return true;
        } else {
            return false;
        }
    }
}
